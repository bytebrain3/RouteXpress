interface RedxCreateOrder {
  customer_name: string; // Full name of the customer receiving the parcel.
  customer_phone: string; // Contact phone number of the customer.
  delivery_area: string; // Name of the delivery area where the parcel will be sent.
  delivery_area_id: number; // Unique identifier of the delivery area.
  customer_address: string; // Complete address of the customer for parcel delivery.
  cash_collection_amount: string; // Amount to be collected from the customer upon delivery.
  parcel_weight: string; // Weight of the parcel in appropriate units (e.g., kg, g).
  merchant_invoice_id?: string; // Invoice ID generated by the merchant for reference (optional).
  instruction?: string; // Special instructions for the delivery (if any) (optional).
  type?: string; // Defines the parcel type, mainly used for reverse shipments (optional).
  value: string; // Declared value of the parcel for compensation calculation.
  parcel_details_json?: object; // JSON object containing additional parcel details (optional).
  pickup_store_id?: string; // ID of the pickup store (optional).
  is_closed_box ?: boolean; // Indicates if the parcel is in a closed box (optional).
}

interface ErrorResponse {
  status: number;
  message: string;
  code?: number;
  error?: string;
}

interface RedxResponse {
  tracking_id: string;
}

interface RedxUpdateOrder{
  success: boolean;
  message: string;
}
interface RedxStoreResponse {
  id: number; // Unique identifier for the store.
  name: string; // Name of the store.
  address: string; // Address of the store.
  area_name: string; // Name of the area where the store is located.
  area_id: number; // Unique identifier of the area.
  phone: string; // Contact phone number of the store.
}

interface RedxTrackByidResponse {
  tracking: Array<{
    message_en: string; // Message in English.
    message_bn: string; // Message in Bengali.
    time: string; // Timestamp of the tracking event.
  }>;
}
interface RedxTrackByid {
  tracking_id: string; // Unique identifier for tracking the parcel.
  customer_address: string; // Address of the customer receiving the parcel.
  delivery_area: string; // Name of the delivery area.
  delivery_area_id: number; // Unique identifier of the delivery area.
  charge: number; // Delivery charge for the parcel.
  customer_name: string; // Full name of the customer.
  customer_phone: string; // Contact phone number of the customer.
  cash_collection_amount: number; // Amount to be collected from the customer upon delivery.
  parcel_weight: number; // Weight of the parcel in appropriate units (e.g., grams).
  merchant_invoice_id: string; // Invoice ID generated by the merchant.
  status: string; // Current status of the parcel (e.g., 'pickup-pending').
  instruction: string; // Special instructions for the delivery (if any).
  created_at: string; // Timestamp when the parcel was created.
  delivery_type: string; // Type of delivery (e.g., 'regular').
  value: string; // Declared value of the parcel.
  pickup_location: {
    id: number; // Unique identifier for the pickup location.
    name: string; // Name of the pickup location.
    address: string; // Address of the pickup location.
    area_name: string; // Name of the area where the pickup location is situated.
    area_id: number; // Unique identifier of the area.
  };
}

interface RedxAreaResponse {
  areas: Array<{
    id: number; // Unique identifier for the area.
    name: string; // Name of the area.
    post_code: number; // Postal code of the area.
    division_name: string; // Name of the division where the area is located.
    zone_id: number; // Unique identifier for the zone.
  }>;
}

export { 
  RedxCreateOrder, 
  ErrorResponse, 
  RedxResponse, 
  RedxUpdateOrder, 
  RedxStoreResponse, 
  RedxTrackByidResponse,
  RedxTrackByid,
  RedxAreaResponse,
};
